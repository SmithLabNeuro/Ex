% add experimenter field to experiment_session to keep track of who ran the
% experiment (and also reorder some columns for ease of seeing in sqlite
% browser)
exGlobals;
localDataDir = params.localDataDir;
homedirCont = dir('~');
homedir = homedirCont(1).folder;
homeTag = find(localDataDir == '~');
localDataDir = [localDataDir(1:homeTag-1) homedir localDataDir(homeTag+1:end)];
sqlDbPath = fullfile(localDataDir, 'database', 'experimentInfo.db');
% we're gonna backup the database to the millisecond, to super minimize
% chances of someone accidentally double running this code and losing data
sqlDbBackupPath = fullfile(localDataDir, 'database', sprintf('experimentInfo_%s.db', datestr(now, 'yyyymmdd_HHMMSSFFF')));
copyfile(sqlDbPath, sqlDbBackupPath)
sqlDb = sqlite(sqlDbPath);


%% update experiment_session to add water_ml and threshold_rms fields
% change move over experiment_session to experiment_session_old
alterStatement = 'ALTER TABLE experiment_session RENAME TO experiment_session_old';
sqlDb.exec(alterStatement);

% create experiment_session table
createStatement = [
    'CREATE TABLE experiment_session '...
        '(session_number INT, '...
        'date DATETIME, '...
        'animal CHAR, '...
        'experimenter CHAR, '... new field
        'water_ml INT, '...
        'notes TEXT NULLABLE, '...
        'rig CHAR, '...
        'threshold_rms INT, '...
        'FOREIGN KEY (rig) REFERENCES rig (name) '...
            'ON DELETE CASCADE, '...
        'FOREIGN KEY (animal) REFERENCES animal (name) '...
            'ON DELETE CASCADE, '...
        'CONSTRAINT session_pk PRIMARY KEY (session_number, animal))'
     ];
sqlDb.exec(createStatement);

% move data into this new table that includes water and threshold info for
% the session
insertStatement = ['INSERT INTO experiment_session '...
    '(session_number, date, animal, rig, notes, water_ml, threshold_rms)'...
    'SELECT session_number, date, animal, rig, notes, water_ml, threshold_rms FROM experiment_session_old'];
sqlDb.exec(insertStatement);

%% rereference experiment_session in experiment_info (as opposed to experiment_session_old)
% change move over experiment_info to experiment_info_old
alterStatement = 'ALTER TABLE experiment_info RENAME TO experiment_info_old';
sqlDb.exec(alterStatement);

% create experiment_info table with reference to correct experiment_session
createStatement = [
    'CREATE TABLE experiment_info '...
        '( session INT, '...
        'animal CHAR, '...
        'start_time DATETIME PRIMARY KEY, '...
        'task CHAR, '...
        'behavior_output_name CHAR, '...
        'neural_output_name CHAR, '...
        'experiment_results TEXT, '...
        'extra_notes TEXT, '...
        'FOREIGN KEY (session, animal) REFERENCES experiment_session (session_number, animal) '...
            'ON DELETE CASCADE, '...
        'FOREIGN KEY (task) REFERENCES task_info (name) '...
        'ON DELETE CASCADE )'
     ];
sqlDb.exec(createStatement);

% move data into this new, primary-keyed table
insertStatement = ['INSERT INTO experiment_info '...
    '(session, animal, start_time, task, behavior_output_name, neural_output_name, experiment_results, extra_notes) '...
    'SELECT session, animal, start_time, task, behavior_output_name, neural_output_name, experiment_results, extra_notes FROM experiment_info_old'];
sqlDb.exec(insertStatement);

%% drop old tables
% drop old experiment_info table
deleteStatement = 'DROP TABLE experiment_info_old;';
sqlDb.exec(deleteStatement);

% drop old experiment_session table
deleteStatement = 'DROP TABLE experiment_session_old;';
sqlDb.exec(deleteStatement);
