<stimulus name="kalmanVelocityDemoBci" repeats="10" ex="ex_kalmanVelocityDemoBci" bgColor="128 128 128">
    <params type="blank" runline="stimLength">
        <bciMaxPixelDist>400</bciMaxPixelDist>
        <useBci>true</useBci>
        <bciDecoderParamFile>'bci_kalmanVelocityDemoDecoder.xml'</bciDecoderParamFile>
        <!-- Specify the file that will be used for training new decoder -->
        <decoderCalibrationFunctionName>'calibrateKalmanVelocityDemoDecoderForBci'</decoderCalibrationFunctionName>
        <!--M1-->
        <bciCalibration_trainAfterBlock>[2 3 4 5 6 7]'</bciCalibration_trainAfterBlock>
        <bciCalibration_trainNextBlockDecoderUsingSegments>{1; 2; [2 3]; [2 3 4]; [2 3 4 5]; [2 3 4 5 6]}</bciCalibration_trainNextBlockDecoderUsingSegments>
        <bciCalibration_centerToTargetBciScaleBySegment>[0; 1; 1; 1; 1; 1; 1]</bciCalibration_centerToTargetBciScaleBySegment>
        <bciCalibration_orthogonalBciScaleBySegment>[0; 0; 0.2; 0.4; 0.6; 0.8; 1]</bciCalibration_orthogonalBciScaleBySegment>
        <bciCalibration_centerToOutVelForAssistBySegment>[400; 0; 0; 0; 0; 0; 0]</bciCalibration_centerToOutVelForAssistBySegment> 
        <!--bciCalibration_bciDecoderFile parameter can be 'trainNew' to go through the calibration process, 
        the pathway (as a string) to a decoder as saved in the database to use that decoder,
        or 'useLastTrained' to grab the last trained decoder from the database (though use this with caution)-->
        <bciCalibration_bciDecoderFile>'trainNew'</bciCalibration_bciDecoderFile>
        <fixX>0</fixX>
        <fixY>0</fixY>
        <fixRad>20</fixRad>
        <joystickHoldTolerance>35</joystickHoldTolerance>
        <bgColor>[128 128 128]'</bgColor>
        <fixColor>[0 0 255]'</fixColor>
        <targColor>[255 255 255]'</targColor>
        <cursorRad>20</cursorRad>
        <cursorColor>[255 0 0]'</cursorColor>
        <timeToStaticJoystickGrab>1000</timeToStaticJoystickGrab>
        <timeToStaticJoystickRelease>0</timeToStaticJoystickRelease><!-- if he has to release the joystick at the end, set >0 -->
        <rtCatchMsForHeJoystickUntwist>[100]</rtCatchMsForHeJoystickUntwist><!-- for preventing too-speedy release of joystick at the end, set >0 -->
        <freezePeriod>200</freezePeriod>
        <movementBciTime>4500</movementBciTime>
        <calibrationDecoderMovementTime>800</calibrationDecoderMovementTime>
        <calibrationDecoderHoldHeMsDuringMovement>800</calibrationDecoderHoldHeMsDuringMovement>
        <targRad>35</targRad>
        <targetDistance>300</targetDistance>
        <joystickName>'DragonRise'</joystickName>
        <targWinCursRad>50</targWinCursRad>
        <delayPeriodMs>[0]</delayPeriodMs>
        <fixationJoystickHold>[500]</fixationJoystickHold>
        <targetAngle>[0:45:315]</targetAngle>
        <heJoystickMinHoldAngle>[3.5]</heJoystickMinHoldAngle>
        <heJoystickMinHoldAngleDuringMovement>0</heJoystickMinHoldAngleDuringMovement><!--this is the required twist angle for the Hall effect joystick *once movementBciTime has started*-->
        <heJoystickMaxHoldAngleForRelease>[1]</heJoystickMaxHoldAngleForRelease><!--this is the required twist angle for the Hall effect joystick *once movementBciTime has started*-->
        <retry_LATE_CHOICE>0</retry_LATE_CHOICE><!--determines whether these are good calibration trials or not-->
        <retry_FALSE_START>1</retry_FALSE_START><!--FALSE_START in this task means he reacted too fast (for a number of different reaction checks), so he should retry the trial-->
    </params>
    <randoms>
        <holdHeMsDuringMovement>[0]</holdHeMsDuringMovement><!--this is a hold/center/twist time for the Hall effect joystick *once movementBciTime has started*-->
    </randoms>
</stimulus>